🐍 Day 1 – Python Basics

### Topics Covered:
- Python Syntax  
- Variables  
- Data Types  
- Practice Program  


🧩 1. Python Syntax

Python uses **indentation (spaces)** to define code blocks — not curly braces `{}` like in C or Java.

🧮 2. Variables

Variables store data values. No need to declare types — Python decides automatically.

 🧠 3. Data Types

| Type | Example | Description |
|------|----------|-------------|
| `int` | 10 | Whole number |
| `float` | 5.6 | Decimal number |
| `str` | "Hello" | Text |
| `bool` | True / False | Logical value |
| `list` | [1, 2, 3] | Ordered collection |
| `tuple` | (1, 2, 3) | Immutable collection |
| `set` | {1, 2, 3} | Unordered unique values |
| `dict` | {"name": "Ananya", "age": 18} | Key–value pairs |
🐍 Day 2 – Strings & Lists in Python

 Topics Covered:
- String Basics  
- String Methods  
- String Slicing  
- List Basics  
- List Methods & Operations  

 🧵 1. Strings in Python

A string is a sequence of characters enclosed in quotes — single ('), double (") or triple (""").

✂️ String Slicing

You can extract parts of a string using slicing syntax:  
string[start:end:step]

🧰 Common String Methods

| Method | Description | Example |
|--------|--------------|----------|
| upper() | Converts to uppercase | "hello".upper() → "HELLO" |
| lower() | Converts to lowercase | "HELLO".lower() → "hello" |
| title() | Capitalizes each word | "python basics".title() → "Python Basics" |
| strip() | Removes whitespace | "  hi  ".strip() → "hi" |
| replace(a, b) | Replaces text | "I love Java".replace("Java", "Python") → "I love Python" |
| split() | Splits string into list | "a,b,c".split(",") → ['a','b','c'] |
| find() | Finds index of substring | "python".find("t") → 2 |



 🧺 2. Lists in Python

A list is an ordered, changeable collection of items.

🎯 Accessing List Elements
print(fruits[0])    # apple
print(fruits[-1])   # cherry
print(fruits[1:3])  # ['banana', 'cherry']

⚙️ Common List Methods & Operations

| Method | Description | Example |
|--------|--------------|----------|
| append(x) | Add item at end | fruits.append("mango") |
| insert(i, x) | Insert item at position | fruits.insert(1, "grape") |
| remove(x) | Remove first matching value | fruits.remove("apple") |
| pop(i) | Remove by index | fruits.pop(1) |
| sort() | Sort list ascending | fruits.sort() |
| reverse() | Reverse order | fruits.reverse() |
| len(list) | Returns length | len(fruits) |
| list.extend(other) | Combine two lists | fruits.extend(["pear","melon"]) |
